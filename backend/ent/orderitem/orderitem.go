// Code generated by ent, DO NOT EDIT.

package orderitem

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the orderitem type in the database.
	Label = "order_item"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldOrderID holds the string denoting the order_id field in the database.
	FieldOrderID = "order_id"
	// FieldProductID holds the string denoting the product_id field in the database.
	FieldProductID = "product_id"
	// FieldPurchasedName holds the string denoting the purchased_name field in the database.
	FieldPurchasedName = "purchased_name"
	// FieldPurchasedPrice holds the string denoting the purchased_price field in the database.
	FieldPurchasedPrice = "purchased_price"
	// FieldQuantity holds the string denoting the quantity field in the database.
	FieldQuantity = "quantity"
	// EdgeOwner holds the string denoting the owner edge name in mutations.
	EdgeOwner = "owner"
	// Table holds the table name of the orderitem in the database.
	Table = "order_items"
	// OwnerTable is the table that holds the owner relation/edge.
	OwnerTable = "order_items"
	// OwnerInverseTable is the table name for the Order entity.
	// It exists in this package in order to avoid circular dependency with the "order" package.
	OwnerInverseTable = "orders"
	// OwnerColumn is the table column denoting the owner relation/edge.
	OwnerColumn = "order_id"
)

// Columns holds all SQL columns for orderitem fields.
var Columns = []string{
	FieldID,
	FieldOrderID,
	FieldProductID,
	FieldPurchasedName,
	FieldPurchasedPrice,
	FieldQuantity,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// PurchasedNameValidator is a validator for the "purchased_name" field. It is called by the builders before save.
	PurchasedNameValidator func(string) error
	// PurchasedPriceValidator is a validator for the "purchased_price" field. It is called by the builders before save.
	PurchasedPriceValidator func(float64) error
	// QuantityValidator is a validator for the "quantity" field. It is called by the builders before save.
	QuantityValidator func(int) error
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
