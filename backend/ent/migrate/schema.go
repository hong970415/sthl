// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ImageinfosColumns holds the columns for the "imageinfos" table.
	ImageinfosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "img_url", Type: field.TypeString, Size: 512},
		{Name: "img_name", Type: field.TypeString, Size: 128},
		{Name: "img_size", Type: field.TypeInt64},
		{Name: "img_s3_id_key", Type: field.TypeString, Unique: true, Size: 1024},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// ImageinfosTable holds the schema information for the "imageinfos" table.
	ImageinfosTable = &schema.Table{
		Name:       "imageinfos",
		Columns:    ImageinfosColumns,
		PrimaryKey: []*schema.Column{ImageinfosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "imageinfos_users_imagesinfo",
				Columns:    []*schema.Column{ImageinfosColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "imageinfo_user_id_img_name",
				Unique:  true,
				Columns: []*schema.Column{ImageinfosColumns[7], ImageinfosColumns[4]},
			},
		},
	}
	// OrdersColumns holds the columns for the "orders" table.
	OrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "discount", Type: field.TypeFloat64},
		{Name: "total_amount", Type: field.TypeFloat64},
		{Name: "remark", Type: field.TypeString, Size: 255},
		{Name: "status", Type: field.TypeString, Size: 255},
		{Name: "payment_status", Type: field.TypeString, Size: 255},
		{Name: "payment_method", Type: field.TypeString, Size: 255},
		{Name: "delivery_status", Type: field.TypeString, Size: 255},
		{Name: "shipping_address", Type: field.TypeString, Size: 512},
		{Name: "tracking_number", Type: field.TypeString, Size: 255},
		{Name: "is_archived", Type: field.TypeBool, Default: false},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// OrdersTable holds the schema information for the "orders" table.
	OrdersTable = &schema.Table{
		Name:       "orders",
		Columns:    OrdersColumns,
		PrimaryKey: []*schema.Column{OrdersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "orders_users_orders",
				Columns:    []*schema.Column{OrdersColumns[13]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// OrderItemsColumns holds the columns for the "order_items" table.
	OrderItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "product_id", Type: field.TypeUUID},
		{Name: "purchased_name", Type: field.TypeString, Size: 255},
		{Name: "purchased_price", Type: field.TypeFloat64},
		{Name: "quantity", Type: field.TypeInt},
		{Name: "order_id", Type: field.TypeUUID},
	}
	// OrderItemsTable holds the schema information for the "order_items" table.
	OrderItemsTable = &schema.Table{
		Name:       "order_items",
		Columns:    OrderItemsColumns,
		PrimaryKey: []*schema.Column{OrderItemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_items_orders_orderitems",
				Columns:    []*schema.Column{OrderItemsColumns[5]},
				RefColumns: []*schema.Column{OrdersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ProductsColumns holds the columns for the "products" table.
	ProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Size: 255},
		{Name: "price", Type: field.TypeFloat64},
		{Name: "quantity", Type: field.TypeInt32},
		{Name: "description", Type: field.TypeString, Size: 255},
		{Name: "status", Type: field.TypeString, Size: 255},
		{Name: "is_archived", Type: field.TypeBool, Default: false},
		{Name: "img_url", Type: field.TypeString, Size: 512, Default: ""},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// ProductsTable holds the schema information for the "products" table.
	ProductsTable = &schema.Table{
		Name:       "products",
		Columns:    ProductsColumns,
		PrimaryKey: []*schema.Column{ProductsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "products_users_products",
				Columns:    []*schema.Column{ProductsColumns[10]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// SiteuisColumns holds the columns for the "siteuis" table.
	SiteuisColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "sitename", Type: field.TypeString, Size: 32},
		{Name: "homepage_img_url", Type: field.TypeString, Size: 512, Default: ""},
		{Name: "homepage_text", Type: field.TypeString, Size: 255},
		{Name: "homepage_text_color", Type: field.TypeString, Size: 16},
		{Name: "user_id", Type: field.TypeUUID, Unique: true},
	}
	// SiteuisTable holds the schema information for the "siteuis" table.
	SiteuisTable = &schema.Table{
		Name:       "siteuis",
		Columns:    SiteuisColumns,
		PrimaryKey: []*schema.Column{SiteuisColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "siteuis_users_siteui",
				Columns:    []*schema.Column{SiteuisColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "siteui_user_id",
				Unique:  true,
				Columns: []*schema.Column{SiteuisColumns[7]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "email", Type: field.TypeString, Unique: true, Size: 255},
		{Name: "hashed_pw", Type: field.TypeString, Size: 255},
		{Name: "email_verified", Type: field.TypeBool, Default: false},
		{Name: "is_archived", Type: field.TypeBool, Default: false},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_email",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[3]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ImageinfosTable,
		OrdersTable,
		OrderItemsTable,
		ProductsTable,
		SiteuisTable,
		UsersTable,
	}
)

func init() {
	ImageinfosTable.ForeignKeys[0].RefTable = UsersTable
	OrdersTable.ForeignKeys[0].RefTable = UsersTable
	OrderItemsTable.ForeignKeys[0].RefTable = OrdersTable
	ProductsTable.ForeignKeys[0].RefTable = UsersTable
	SiteuisTable.ForeignKeys[0].RefTable = UsersTable
}
