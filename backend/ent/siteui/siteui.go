// Code generated by ent, DO NOT EDIT.

package siteui

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the siteui type in the database.
	Label = "siteui"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldSitename holds the string denoting the sitename field in the database.
	FieldSitename = "sitename"
	// FieldHomepageImgUrl holds the string denoting the homepageimgurl field in the database.
	FieldHomepageImgUrl = "homepage_img_url"
	// FieldHomepageText holds the string denoting the homepagetext field in the database.
	FieldHomepageText = "homepage_text"
	// FieldHomepageTextColor holds the string denoting the homepagetextcolor field in the database.
	FieldHomepageTextColor = "homepage_text_color"
	// EdgeOwner holds the string denoting the owner edge name in mutations.
	EdgeOwner = "owner"
	// Table holds the table name of the siteui in the database.
	Table = "siteuis"
	// OwnerTable is the table that holds the owner relation/edge.
	OwnerTable = "siteuis"
	// OwnerInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	OwnerInverseTable = "users"
	// OwnerColumn is the table column denoting the owner relation/edge.
	OwnerColumn = "user_id"
)

// Columns holds all SQL columns for siteui fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldUserID,
	FieldSitename,
	FieldHomepageImgUrl,
	FieldHomepageText,
	FieldHomepageTextColor,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// SitenameValidator is a validator for the "sitename" field. It is called by the builders before save.
	SitenameValidator func(string) error
	// DefaultHomepageImgUrl holds the default value on creation for the "homepageImgUrl" field.
	DefaultHomepageImgUrl string
	// HomepageImgUrlValidator is a validator for the "homepageImgUrl" field. It is called by the builders before save.
	HomepageImgUrlValidator func(string) error
	// HomepageTextValidator is a validator for the "homepageText" field. It is called by the builders before save.
	HomepageTextValidator func(string) error
	// HomepageTextColorValidator is a validator for the "homepageTextColor" field. It is called by the builders before save.
	HomepageTextColorValidator func(string) error
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
