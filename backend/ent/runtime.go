// Code generated by ent, DO NOT EDIT.

package ent

import (
	"sthl/ent/imageinfo"
	"sthl/ent/order"
	"sthl/ent/orderitem"
	"sthl/ent/product"
	"sthl/ent/schema"
	"sthl/ent/siteui"
	"sthl/ent/user"
	"time"

	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	imageinfoMixin := schema.Imageinfo{}.Mixin()
	imageinfoMixinFields0 := imageinfoMixin[0].Fields()
	_ = imageinfoMixinFields0
	imageinfoFields := schema.Imageinfo{}.Fields()
	_ = imageinfoFields
	// imageinfoDescCreatedAt is the schema descriptor for created_at field.
	imageinfoDescCreatedAt := imageinfoMixinFields0[0].Descriptor()
	// imageinfo.DefaultCreatedAt holds the default value on creation for the created_at field.
	imageinfo.DefaultCreatedAt = imageinfoDescCreatedAt.Default.(func() time.Time)
	// imageinfoDescUpdatedAt is the schema descriptor for updated_at field.
	imageinfoDescUpdatedAt := imageinfoMixinFields0[1].Descriptor()
	// imageinfo.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	imageinfo.DefaultUpdatedAt = imageinfoDescUpdatedAt.Default.(func() time.Time)
	// imageinfo.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	imageinfo.UpdateDefaultUpdatedAt = imageinfoDescUpdatedAt.UpdateDefault.(func() time.Time)
	// imageinfoDescImgURL is the schema descriptor for img_url field.
	imageinfoDescImgURL := imageinfoFields[1].Descriptor()
	// imageinfo.ImgURLValidator is a validator for the "img_url" field. It is called by the builders before save.
	imageinfo.ImgURLValidator = imageinfoDescImgURL.Validators[0].(func(string) error)
	// imageinfoDescImgName is the schema descriptor for img_name field.
	imageinfoDescImgName := imageinfoFields[2].Descriptor()
	// imageinfo.ImgNameValidator is a validator for the "img_name" field. It is called by the builders before save.
	imageinfo.ImgNameValidator = imageinfoDescImgName.Validators[0].(func(string) error)
	// imageinfoDescImgSize is the schema descriptor for img_size field.
	imageinfoDescImgSize := imageinfoFields[3].Descriptor()
	// imageinfo.ImgSizeValidator is a validator for the "img_size" field. It is called by the builders before save.
	imageinfo.ImgSizeValidator = imageinfoDescImgSize.Validators[0].(func(int64) error)
	// imageinfoDescImgS3IDKey is the schema descriptor for img_s3_id_key field.
	imageinfoDescImgS3IDKey := imageinfoFields[4].Descriptor()
	// imageinfo.ImgS3IDKeyValidator is a validator for the "img_s3_id_key" field. It is called by the builders before save.
	imageinfo.ImgS3IDKeyValidator = imageinfoDescImgS3IDKey.Validators[0].(func(string) error)
	orderMixin := schema.Order{}.Mixin()
	orderMixinFields0 := orderMixin[0].Fields()
	_ = orderMixinFields0
	orderFields := schema.Order{}.Fields()
	_ = orderFields
	// orderDescCreatedAt is the schema descriptor for created_at field.
	orderDescCreatedAt := orderMixinFields0[0].Descriptor()
	// order.DefaultCreatedAt holds the default value on creation for the created_at field.
	order.DefaultCreatedAt = orderDescCreatedAt.Default.(func() time.Time)
	// orderDescUpdatedAt is the schema descriptor for updated_at field.
	orderDescUpdatedAt := orderMixinFields0[1].Descriptor()
	// order.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	order.DefaultUpdatedAt = orderDescUpdatedAt.Default.(func() time.Time)
	// order.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	order.UpdateDefaultUpdatedAt = orderDescUpdatedAt.UpdateDefault.(func() time.Time)
	// orderDescDiscount is the schema descriptor for discount field.
	orderDescDiscount := orderFields[2].Descriptor()
	// order.DiscountValidator is a validator for the "discount" field. It is called by the builders before save.
	order.DiscountValidator = func() func(float64) error {
		validators := orderDescDiscount.Validators
		fns := [...]func(float64) error{
			validators[0].(func(float64) error),
			validators[1].(func(float64) error),
		}
		return func(discount float64) error {
			for _, fn := range fns {
				if err := fn(discount); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// orderDescTotalAmount is the schema descriptor for total_amount field.
	orderDescTotalAmount := orderFields[3].Descriptor()
	// order.TotalAmountValidator is a validator for the "total_amount" field. It is called by the builders before save.
	order.TotalAmountValidator = orderDescTotalAmount.Validators[0].(func(float64) error)
	// orderDescRemark is the schema descriptor for remark field.
	orderDescRemark := orderFields[4].Descriptor()
	// order.RemarkValidator is a validator for the "remark" field. It is called by the builders before save.
	order.RemarkValidator = orderDescRemark.Validators[0].(func(string) error)
	// orderDescStatus is the schema descriptor for status field.
	orderDescStatus := orderFields[5].Descriptor()
	// order.StatusValidator is a validator for the "status" field. It is called by the builders before save.
	order.StatusValidator = orderDescStatus.Validators[0].(func(string) error)
	// orderDescPaymentStatus is the schema descriptor for payment_status field.
	orderDescPaymentStatus := orderFields[6].Descriptor()
	// order.PaymentStatusValidator is a validator for the "payment_status" field. It is called by the builders before save.
	order.PaymentStatusValidator = orderDescPaymentStatus.Validators[0].(func(string) error)
	// orderDescPaymentMethod is the schema descriptor for payment_method field.
	orderDescPaymentMethod := orderFields[7].Descriptor()
	// order.PaymentMethodValidator is a validator for the "payment_method" field. It is called by the builders before save.
	order.PaymentMethodValidator = orderDescPaymentMethod.Validators[0].(func(string) error)
	// orderDescDeliveryStatus is the schema descriptor for delivery_status field.
	orderDescDeliveryStatus := orderFields[8].Descriptor()
	// order.DeliveryStatusValidator is a validator for the "delivery_status" field. It is called by the builders before save.
	order.DeliveryStatusValidator = orderDescDeliveryStatus.Validators[0].(func(string) error)
	// orderDescShippingAddress is the schema descriptor for shipping_address field.
	orderDescShippingAddress := orderFields[9].Descriptor()
	// order.ShippingAddressValidator is a validator for the "shipping_address" field. It is called by the builders before save.
	order.ShippingAddressValidator = orderDescShippingAddress.Validators[0].(func(string) error)
	// orderDescTrackingNumber is the schema descriptor for tracking_number field.
	orderDescTrackingNumber := orderFields[10].Descriptor()
	// order.TrackingNumberValidator is a validator for the "tracking_number" field. It is called by the builders before save.
	order.TrackingNumberValidator = orderDescTrackingNumber.Validators[0].(func(string) error)
	// orderDescIsArchived is the schema descriptor for is_archived field.
	orderDescIsArchived := orderFields[11].Descriptor()
	// order.DefaultIsArchived holds the default value on creation for the is_archived field.
	order.DefaultIsArchived = orderDescIsArchived.Default.(bool)
	// orderDescID is the schema descriptor for id field.
	orderDescID := orderFields[0].Descriptor()
	// order.DefaultID holds the default value on creation for the id field.
	order.DefaultID = orderDescID.Default.(func() uuid.UUID)
	orderitemFields := schema.OrderItem{}.Fields()
	_ = orderitemFields
	// orderitemDescPurchasedName is the schema descriptor for purchased_name field.
	orderitemDescPurchasedName := orderitemFields[3].Descriptor()
	// orderitem.PurchasedNameValidator is a validator for the "purchased_name" field. It is called by the builders before save.
	orderitem.PurchasedNameValidator = orderitemDescPurchasedName.Validators[0].(func(string) error)
	// orderitemDescPurchasedPrice is the schema descriptor for purchased_price field.
	orderitemDescPurchasedPrice := orderitemFields[4].Descriptor()
	// orderitem.PurchasedPriceValidator is a validator for the "purchased_price" field. It is called by the builders before save.
	orderitem.PurchasedPriceValidator = orderitemDescPurchasedPrice.Validators[0].(func(float64) error)
	// orderitemDescQuantity is the schema descriptor for quantity field.
	orderitemDescQuantity := orderitemFields[5].Descriptor()
	// orderitem.QuantityValidator is a validator for the "quantity" field. It is called by the builders before save.
	orderitem.QuantityValidator = orderitemDescQuantity.Validators[0].(func(int) error)
	// orderitemDescID is the schema descriptor for id field.
	orderitemDescID := orderitemFields[0].Descriptor()
	// orderitem.DefaultID holds the default value on creation for the id field.
	orderitem.DefaultID = orderitemDescID.Default.(func() uuid.UUID)
	productMixin := schema.Product{}.Mixin()
	productMixinFields0 := productMixin[0].Fields()
	_ = productMixinFields0
	productFields := schema.Product{}.Fields()
	_ = productFields
	// productDescCreatedAt is the schema descriptor for created_at field.
	productDescCreatedAt := productMixinFields0[0].Descriptor()
	// product.DefaultCreatedAt holds the default value on creation for the created_at field.
	product.DefaultCreatedAt = productDescCreatedAt.Default.(func() time.Time)
	// productDescUpdatedAt is the schema descriptor for updated_at field.
	productDescUpdatedAt := productMixinFields0[1].Descriptor()
	// product.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	product.DefaultUpdatedAt = productDescUpdatedAt.Default.(func() time.Time)
	// product.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	product.UpdateDefaultUpdatedAt = productDescUpdatedAt.UpdateDefault.(func() time.Time)
	// productDescName is the schema descriptor for name field.
	productDescName := productFields[2].Descriptor()
	// product.NameValidator is a validator for the "name" field. It is called by the builders before save.
	product.NameValidator = productDescName.Validators[0].(func(string) error)
	// productDescPrice is the schema descriptor for price field.
	productDescPrice := productFields[3].Descriptor()
	// product.PriceValidator is a validator for the "price" field. It is called by the builders before save.
	product.PriceValidator = func() func(float64) error {
		validators := productDescPrice.Validators
		fns := [...]func(float64) error{
			validators[0].(func(float64) error),
			validators[1].(func(float64) error),
		}
		return func(price float64) error {
			for _, fn := range fns {
				if err := fn(price); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// productDescQuantity is the schema descriptor for quantity field.
	productDescQuantity := productFields[4].Descriptor()
	// product.QuantityValidator is a validator for the "quantity" field. It is called by the builders before save.
	product.QuantityValidator = func() func(int32) error {
		validators := productDescQuantity.Validators
		fns := [...]func(int32) error{
			validators[0].(func(int32) error),
			validators[1].(func(int32) error),
		}
		return func(quantity int32) error {
			for _, fn := range fns {
				if err := fn(quantity); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// productDescDescription is the schema descriptor for description field.
	productDescDescription := productFields[5].Descriptor()
	// product.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	product.DescriptionValidator = productDescDescription.Validators[0].(func(string) error)
	// productDescStatus is the schema descriptor for status field.
	productDescStatus := productFields[6].Descriptor()
	// product.StatusValidator is a validator for the "status" field. It is called by the builders before save.
	product.StatusValidator = productDescStatus.Validators[0].(func(string) error)
	// productDescIsArchived is the schema descriptor for is_archived field.
	productDescIsArchived := productFields[7].Descriptor()
	// product.DefaultIsArchived holds the default value on creation for the is_archived field.
	product.DefaultIsArchived = productDescIsArchived.Default.(bool)
	// productDescImgURL is the schema descriptor for img_url field.
	productDescImgURL := productFields[8].Descriptor()
	// product.DefaultImgURL holds the default value on creation for the img_url field.
	product.DefaultImgURL = productDescImgURL.Default.(string)
	// product.ImgURLValidator is a validator for the "img_url" field. It is called by the builders before save.
	product.ImgURLValidator = productDescImgURL.Validators[0].(func(string) error)
	// productDescID is the schema descriptor for id field.
	productDescID := productFields[0].Descriptor()
	// product.DefaultID holds the default value on creation for the id field.
	product.DefaultID = productDescID.Default.(func() uuid.UUID)
	siteuiMixin := schema.Siteui{}.Mixin()
	siteuiMixinFields0 := siteuiMixin[0].Fields()
	_ = siteuiMixinFields0
	siteuiFields := schema.Siteui{}.Fields()
	_ = siteuiFields
	// siteuiDescCreatedAt is the schema descriptor for created_at field.
	siteuiDescCreatedAt := siteuiMixinFields0[0].Descriptor()
	// siteui.DefaultCreatedAt holds the default value on creation for the created_at field.
	siteui.DefaultCreatedAt = siteuiDescCreatedAt.Default.(func() time.Time)
	// siteuiDescUpdatedAt is the schema descriptor for updated_at field.
	siteuiDescUpdatedAt := siteuiMixinFields0[1].Descriptor()
	// siteui.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	siteui.DefaultUpdatedAt = siteuiDescUpdatedAt.Default.(func() time.Time)
	// siteui.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	siteui.UpdateDefaultUpdatedAt = siteuiDescUpdatedAt.UpdateDefault.(func() time.Time)
	// siteuiDescSitename is the schema descriptor for sitename field.
	siteuiDescSitename := siteuiFields[2].Descriptor()
	// siteui.SitenameValidator is a validator for the "sitename" field. It is called by the builders before save.
	siteui.SitenameValidator = siteuiDescSitename.Validators[0].(func(string) error)
	// siteuiDescHomepageImgUrl is the schema descriptor for homepageImgUrl field.
	siteuiDescHomepageImgUrl := siteuiFields[3].Descriptor()
	// siteui.DefaultHomepageImgUrl holds the default value on creation for the homepageImgUrl field.
	siteui.DefaultHomepageImgUrl = siteuiDescHomepageImgUrl.Default.(string)
	// siteui.HomepageImgUrlValidator is a validator for the "homepageImgUrl" field. It is called by the builders before save.
	siteui.HomepageImgUrlValidator = siteuiDescHomepageImgUrl.Validators[0].(func(string) error)
	// siteuiDescHomepageText is the schema descriptor for homepageText field.
	siteuiDescHomepageText := siteuiFields[4].Descriptor()
	// siteui.HomepageTextValidator is a validator for the "homepageText" field. It is called by the builders before save.
	siteui.HomepageTextValidator = siteuiDescHomepageText.Validators[0].(func(string) error)
	// siteuiDescHomepageTextColor is the schema descriptor for homepageTextColor field.
	siteuiDescHomepageTextColor := siteuiFields[5].Descriptor()
	// siteui.HomepageTextColorValidator is a validator for the "homepageTextColor" field. It is called by the builders before save.
	siteui.HomepageTextColorValidator = siteuiDescHomepageTextColor.Validators[0].(func(string) error)
	// siteuiDescID is the schema descriptor for id field.
	siteuiDescID := siteuiFields[0].Descriptor()
	// siteui.DefaultID holds the default value on creation for the id field.
	siteui.DefaultID = siteuiDescID.Default.(func() uuid.UUID)
	userMixin := schema.User{}.Mixin()
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userMixinFields0[0].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userMixinFields0[1].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[1].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescHashedPw is the schema descriptor for hashed_pw field.
	userDescHashedPw := userFields[2].Descriptor()
	// user.HashedPwValidator is a validator for the "hashed_pw" field. It is called by the builders before save.
	user.HashedPwValidator = userDescHashedPw.Validators[0].(func(string) error)
	// userDescEmailVerified is the schema descriptor for email_verified field.
	userDescEmailVerified := userFields[3].Descriptor()
	// user.DefaultEmailVerified holds the default value on creation for the email_verified field.
	user.DefaultEmailVerified = userDescEmailVerified.Default.(bool)
	// userDescIsArchived is the schema descriptor for is_archived field.
	userDescIsArchived := userFields[4].Descriptor()
	// user.DefaultIsArchived holds the default value on creation for the is_archived field.
	user.DefaultIsArchived = userDescIsArchived.Default.(bool)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() uuid.UUID)
}
