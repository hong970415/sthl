// Code generated by ent, DO NOT EDIT.

package user

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldHashedPw holds the string denoting the hashed_pw field in the database.
	FieldHashedPw = "hashed_pw"
	// FieldEmailVerified holds the string denoting the email_verified field in the database.
	FieldEmailVerified = "email_verified"
	// FieldIsArchived holds the string denoting the is_archived field in the database.
	FieldIsArchived = "is_archived"
	// EdgeProducts holds the string denoting the products edge name in mutations.
	EdgeProducts = "products"
	// EdgeOrders holds the string denoting the orders edge name in mutations.
	EdgeOrders = "orders"
	// EdgeSiteui holds the string denoting the siteui edge name in mutations.
	EdgeSiteui = "siteui"
	// EdgeImagesinfo holds the string denoting the imagesinfo edge name in mutations.
	EdgeImagesinfo = "imagesinfo"
	// Table holds the table name of the user in the database.
	Table = "users"
	// ProductsTable is the table that holds the products relation/edge.
	ProductsTable = "products"
	// ProductsInverseTable is the table name for the Product entity.
	// It exists in this package in order to avoid circular dependency with the "product" package.
	ProductsInverseTable = "products"
	// ProductsColumn is the table column denoting the products relation/edge.
	ProductsColumn = "user_id"
	// OrdersTable is the table that holds the orders relation/edge.
	OrdersTable = "orders"
	// OrdersInverseTable is the table name for the Order entity.
	// It exists in this package in order to avoid circular dependency with the "order" package.
	OrdersInverseTable = "orders"
	// OrdersColumn is the table column denoting the orders relation/edge.
	OrdersColumn = "user_id"
	// SiteuiTable is the table that holds the siteui relation/edge.
	SiteuiTable = "siteuis"
	// SiteuiInverseTable is the table name for the Siteui entity.
	// It exists in this package in order to avoid circular dependency with the "siteui" package.
	SiteuiInverseTable = "siteuis"
	// SiteuiColumn is the table column denoting the siteui relation/edge.
	SiteuiColumn = "user_id"
	// ImagesinfoTable is the table that holds the imagesinfo relation/edge.
	ImagesinfoTable = "imageinfos"
	// ImagesinfoInverseTable is the table name for the Imageinfo entity.
	// It exists in this package in order to avoid circular dependency with the "imageinfo" package.
	ImagesinfoInverseTable = "imageinfos"
	// ImagesinfoColumn is the table column denoting the imagesinfo relation/edge.
	ImagesinfoColumn = "user_id"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldEmail,
	FieldHashedPw,
	FieldEmailVerified,
	FieldIsArchived,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// EmailValidator is a validator for the "email" field. It is called by the builders before save.
	EmailValidator func(string) error
	// HashedPwValidator is a validator for the "hashed_pw" field. It is called by the builders before save.
	HashedPwValidator func(string) error
	// DefaultEmailVerified holds the default value on creation for the "email_verified" field.
	DefaultEmailVerified bool
	// DefaultIsArchived holds the default value on creation for the "is_archived" field.
	DefaultIsArchived bool
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
