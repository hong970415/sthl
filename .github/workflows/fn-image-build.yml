name: Frontend image build
on:
  workflow_dispatch:
    inputs:
      commitShaToBuild:
        description: "Git SHA to build"
        required: false
env:
  CommitShaToBuild: ${{ github.event.inputs.commitShaToBuild || github.sha }}

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      commitShaToBuild: ${{ env.CommitShaToBuild }}
      nodeEnv: ${{ steps.prepare-config.outputs.nodeEnv }} # dev/prod
      awsRegion: ${{ steps.prepare-config.outputs.awsRegion }}
      ecrRepoName: ${{ steps.prepare-config.outputs.ecrRepoName }}
    steps:
      - name: Prepare config
        id: prepare-config
        run: |
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            NODEENV="prod"
          elif [[ "${{ github.ref_name }}" == "dev" ]]; then
            NODEENV="dev"
          else
            echo "Invalid branch specified for repository."
            exit 1
          fi
          echo "branch: ${{ github.ref_name }}"
          echo "nodeEnv=$NODEENV" >> "$GITHUB_OUTPUT"
          echo "awsRegion=ap-east-1" >> "$GITHUB_OUTPUT"
          echo "ecrRepoName=sthl-frontend-$NODEENV" >> "$GITHUB_OUTPUT"

  build:
    needs: [prepare]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    outputs:
      imageURL: ${{ steps.build-image.outputs.imageURL }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.prepare.outputs.commitShaToBuild }}
          fetch-depth: 0

      - name: Print config
        run: |
          echo "commitShaToBuild: ${{ needs.prepare.outputs.commitShaToBuild }}"
          echo "nodeEnv: ${{ needs.prepare.outputs.nodeEnv }}"
          echo "ecrRepoName: ${{ needs.prepare.outputs.ecrRepoName }}"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ needs.prepare.outputs.awsRegion }}
          mask-aws-account-id: false

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        id: build-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ needs.prepare.outputs.ecrRepoName }}
          IMAGE_TAG: ${{ needs.prepare.outputs.commitShaToBuild }}
        run: |
          IMAGE_URL=$REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "imageURL=$IMAGE_URL" >> "$GITHUB_OUTPUT"
          docker build -t $IMAGE_URL --build-arg BUILD_ENV=${{ needs.prepare.outputs.nodeEnv }} .
          docker push $IMAGE_URL
